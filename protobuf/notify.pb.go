// Code generated by protoc-gen-go.
// source: notify.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NotifyRequest struct {
	ID   string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
}

func (m *NotifyRequest) Reset()                    { *m = NotifyRequest{} }
func (m *NotifyRequest) String() string            { return proto.CompactTextString(m) }
func (*NotifyRequest) ProtoMessage()               {}
func (*NotifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *NotifyRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NotifyRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type NotifyResponse struct {
	ID   string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
}

func (m *NotifyResponse) Reset()                    { *m = NotifyResponse{} }
func (m *NotifyResponse) String() string            { return proto.CompactTextString(m) }
func (*NotifyResponse) ProtoMessage()               {}
func (*NotifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *NotifyResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NotifyResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func init() {
	proto.RegisterType((*NotifyRequest)(nil), "protobuf.NotifyRequest")
	proto.RegisterType((*NotifyResponse)(nil), "protobuf.NotifyResponse")
}

func init() { proto.RegisterFile("notify.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 108 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0xcb, 0x2f, 0xc9,
	0x4c, 0xab, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a,
	0xc6, 0x5c, 0xbc, 0x7e, 0x60, 0x99, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x3e, 0x2e,
	0x26, 0x4f, 0x17, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x26, 0x4f, 0x17, 0x21, 0x21, 0x2e,
	0x96, 0x8c, 0xfc, 0xe2, 0x12, 0x09, 0x26, 0xb0, 0x08, 0x98, 0xad, 0x64, 0xc2, 0xc5, 0x07, 0xd3,
	0x54, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x4a, 0x8c, 0xae, 0x24, 0x36, 0xb0, 0xa5, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x8c, 0x36, 0x8d, 0x7c, 0x8b, 0x00, 0x00, 0x00,
}
